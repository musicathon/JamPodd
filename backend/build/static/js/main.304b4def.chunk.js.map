{"version":3,"sources":["http-common.js","components/ConditionalRoute.js","components/LoginPage/LoginPage.js","utils/refreshToken.js","components/LogoutButton/LogoutButton.js","components/Header/Header.js","components/Footer/Footer.js","utils/songsDS.js","utils/PlaylistsDS.js","components/Explore/Explore.js","components/Playlists/Playlists.js","components/PlaylistPage/PlaylistPage.js","App.js","index.js"],"names":["axios","create","headers","ConditionalRoute","condition","redirectPath","children","rest","to","clientId","process","GOOGLE_OAUTH_ID","LoginPage","setGToken","signIn","useGoogleLogin","onSuccess","res","refreshToken","a","reloadAuthResponse","newAuthRes","refreshTiming","expires_in","setTimeout","tokenObj","refreshTokenSetup","onFailure","console","error","hostedDomain","prompt","isSignedIn","className","src","alt","onClick","LogoutButton","DPSrc","signOut","useGoogleLogout","onLogoutSuccess","undefined","Header","exact","activeClassName","Footer","currentTrackIndex","setCurrentTrackIndex","doShuffle","setDoShuffle","currentTrackList","useState","trackProgress","setTrackProgress","volume","setVolume","isPlaying","setIsPlaying","doRepeat","setDoRepeat","title","artist","audioSrc","imageSrc","audioRef","useRef","Audio","intervalRef","stopUpdatingSeek","clearInterval","current","startUpdatingSeek","setInterval","ended","toNextTrack","currentTime","useEffect","play","pause","refreshAudio","load","then","catch","e","getRandomTrackIndex","length","randomTrackIndex","Math","floor","random","onSeekEnd","volumeIcon","parseTime","timeInSec","NaN","mins","toString","seconds","padStart","duration","trackPerc","volumePerc","seekStyle","volumeBarStyle","type","value","step","min","max","style","background","onChange","target","onMouseUp","onKeyUp","keyword","http","get","ids","join","id","data","post","tracks","put","delete","Explore","setCurrentTrackList","queriedTracks","setQueriedTracks","query","setQuery","checkedSongs","setCheckedSongs","isAnySongChecked","setIsAnySongChecked","playlists","setPlaylists","showPlSelector","setShowPlSelector","songsDS","getByKeyword","songs","searchResults","onAddPlClick","playlistsDS","getAll","playlistList","onSearch","preventDefault","onCheck","newObj","name","checked","Object","values","some","onPlSelect","playlist","find","_id","trackIds","newTrackIds","keys","filter","key","newTrackId","includes","push","edit","disabled","map","track","index","onPlay","album","onSubmit","Playlists","refreshPlaylists","showPlForm","setShowPlForm","formPlName","setFormPlName","isEditing","setIsEditing","editingPlaylistId","setEditingPlaylistId","showPopup","plId","onDelete","maxLength","placeholder","required","PlaylistPage","useParams","setPlaylist","setTracks","refreshPlaylist","getById","getByIds","updatedTrackIds","trackId","sec","App","gToken","defaults","common","tokenId","path","profileObj","imageUrl","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.304b4def.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n\theaders: {\r\n\t\t'Content-type': 'application/json'\r\n\t}\r\n});\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ConditionalRoute = ({ condition, redirectPath, children, ...rest }) => {\r\n\t// * use render if children is causing issues\r\n\treturn (\r\n\t\t<Route {...rest}>{condition ? children : <Redirect to={redirectPath} />}</Route>\r\n\t);\r\n};\r\n\r\nConditionalRoute.propTypes = {\r\n\tcondition: PropTypes.bool.isRequired,\r\n\tredirectPath: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ConditionalRoute;\r\n","import './LoginPage.css';\r\nimport { useGoogleLogin } from 'react-google-login';\r\nimport { AiOutlineGoogle } from 'react-icons/ai';\r\nimport { refreshTokenSetup } from '../../utils/refreshToken';\r\n\r\nconst clientId = process.env.GOOGLE_OAUTH_ID || process.env.REACT_APP_GOOGLE_OAUTH_ID;\r\n\r\nfunction LoginPage({ setGToken }) {\r\n\tconst onSuccess = (res) => {\r\n\t\tsetGToken(res);\r\n\t\trefreshTokenSetup(res, setGToken);\r\n\t};\r\n\r\n\tconst onFailure = (res) => console.error('Login failed: ', res);\r\n\r\n\tconst { signIn } = useGoogleLogin({\r\n\t\tonSuccess,\r\n\t\tonFailure,\r\n\t\tclientId,\r\n\t\thostedDomain: 'goa.bits-pilani.ac.in',\r\n\t\tprompt: 'select_account',\r\n\t\tisSignedIn: true\r\n\t});\r\n\r\n\treturn (\r\n\t\t<article className='login'>\r\n\t\t\t<div className='login__cntr'>\r\n\t\t\t\t<h1>JamPodd</h1>\r\n\t\t\t\t<h1>Sign In</h1>\r\n\t\t\t\t<div className='login__img-cntr'>\r\n\t\t\t\t\t<img src='/assets/logo512.png' alt='jampodd logo' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={signIn} className='gbtn --login'>\r\n\t\t\t\t\t<div className='gbtn__icon-cntr'>\r\n\t\t\t\t\t\t<AiOutlineGoogle />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span>BITS Mail</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default LoginPage;\r\n","export const refreshTokenSetup = (res, setGToken) => {\r\n\tconst refreshToken = async () => {\r\n\t\tconst newAuthRes = await res.reloadAuthResponse();\r\n\t\trefreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n\t\tsetGToken(newAuthRes);\r\n\r\n\t\t// Setup the other timer after the first one\r\n\t\tsetTimeout(refreshToken, refreshTiming);\r\n\t};\r\n\r\n\t// Timing to renew access token\r\n\tlet refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n\t// Setup first refresh timer\r\n\tsetTimeout(refreshToken, refreshTiming);\r\n};\r\n","import React from 'react';\r\nimport { useGoogleLogout } from 'react-google-login';\r\n\r\nconst clientId = process.env.GOOGLE_OAUTH_ID || process.env.REACT_APP_GOOGLE_OAUTH_ID;\r\n\r\nfunction LogoutButton({ setGToken, DPSrc }) {\r\n\tconst onLogoutSuccess = (res) => {\r\n\t\tsetGToken(undefined);\r\n\t};\r\n\r\n\tconst onFailure = () => console.error('Logout Failed');\r\n\r\n\tconst { signOut } = useGoogleLogout({\r\n\t\tclientId,\r\n\t\tonLogoutSuccess,\r\n\t\tonFailure\r\n\t});\r\n\r\n\treturn (\r\n\t\t<button onClick={signOut} className='gbtn --logout'>\r\n\t\t\t<div className='gbtn__icon-cntr'>\r\n\t\t\t\t<img src={DPSrc} alt='dp' />\r\n\t\t\t</div>\r\n\t\t\t<span className='buttonText'>Sign out</span>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default LogoutButton;\r\n","import './Header.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LogoutButton from '../LogoutButton/LogoutButton';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { IoAlbums } from 'react-icons/io5';\r\n\r\nconst Header = ({ setGToken, DPSrc }) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className='logo'>\r\n\t\t\t\t<div className='logo__img-cntr'>\r\n\t\t\t\t\t<img src='/assets/logo192.png' alt='icon' className='logo__img' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className='logo__title'>JamPodd</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<nav className='nav'>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink exact to='/explore' activeClassName='--active'>\r\n\t\t\t\t\t\t\t<div className='nav__icon-cntr'>\r\n\t\t\t\t\t\t\t\t<AiOutlineSearch />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span>Explore</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink exact to='/playlists' activeClassName='--active'>\r\n\t\t\t\t\t\t\t<div className='nav__icon-cntr'>\r\n\t\t\t\t\t\t\t\t<IoAlbums />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<span>Playlists</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\r\n\t\t\t<div className='logout'>\r\n\t\t\t\t<LogoutButton setGToken={setGToken} DPSrc={DPSrc} />\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Footer.css';\r\nimport { AiFillPlayCircle, AiFillPauseCircle } from 'react-icons/ai';\r\nimport { BiSkipNext, BiSkipPrevious } from 'react-icons/bi';\r\nimport {\r\n\tIoShuffleOutline,\r\n\tIoRepeatOutline,\r\n\tIoVolumeOff,\r\n\tIoVolumeLow,\r\n\tIoVolumeMedium,\r\n\tIoVolumeHigh\r\n} from 'react-icons/io5';\r\n\r\nconst Footer = ({\r\n\tcurrentTrackIndex,\r\n\tsetCurrentTrackIndex,\r\n\tdoShuffle,\r\n\tsetDoShuffle,\r\n\tcurrentTrackList\r\n}) => {\r\n\tconst [trackProgress, setTrackProgress] = useState(0); // stores track progress in seconds\r\n\tconst [volume, setVolume] = useState(0.75); // stores volume\r\n\tconst [isPlaying, setIsPlaying] = useState(false); // play/pause state\r\n\tconst [doRepeat, setDoRepeat] = useState(false); // repeat state. when true, repeats the same track\r\n\r\n\tconst { title, artist, audioSrc, imageSrc } = currentTrackList[currentTrackIndex]; // get current track info\r\n\r\n\tconst audioRef = useRef(new Audio()); // current track Audio object\r\n\tconst intervalRef = useRef(); // stores IDs of setInterval\r\n\r\n\t// autoplayback and seek-bar updater\r\n\tconst stopUpdatingSeek = () => clearInterval(intervalRef.current);\r\n\r\n\tconst startUpdatingSeek = () => {\r\n\t\t// Clears any currently running updaters\r\n\t\tstopUpdatingSeek();\r\n\r\n\t\t// checks every second if the song has ended, and updates the seek bar.\r\n\t\tintervalRef.current = setInterval(() => {\r\n\t\t\tif (audioRef.current.ended) toNextTrack();\r\n\t\t\telse setTrackProgress(audioRef.current.currentTime);\r\n\t\t}, [500]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isPlaying) {\r\n\t\t\taudioRef.current.play();\r\n\t\t\tstartUpdatingSeek();\r\n\t\t} else {\r\n\t\t\taudioRef.current.pause();\r\n\t\t\tstopUpdatingSeek();\r\n\t\t}\r\n\r\n\t\t// stfu linter:\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isPlaying]);\r\n\r\n\t// refresh audioref and play it\r\n\tconst refreshAudio = () => {\r\n\t\taudioRef.current.load();\r\n\t\taudioRef.current.volume = volume;\r\n\t\taudioRef.current\r\n\t\t\t.play()\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetIsPlaying(true);\r\n\t\t\t\tstartUpdatingSeek();\r\n\t\t\t})\r\n\t\t\t.catch((e) => null);\r\n\t};\r\n\r\n\t// change tracks\r\n\tconst toPrevTrack = () => {\r\n\t\tif (trackProgress > 5 || doRepeat) refreshAudio();\r\n\t\telse if (doShuffle) setCurrentTrackIndex(getRandomTrackIndex());\r\n\t\telse if (currentTrackIndex === 0)\r\n\t\t\tsetCurrentTrackIndex(currentTrackList.length - 1);\r\n\t\telse setCurrentTrackIndex(currentTrackIndex - 1);\r\n\t};\r\n\r\n\tconst toNextTrack = () => {\r\n\t\tif (doRepeat) refreshAudio();\r\n\t\telse if (doShuffle) setCurrentTrackIndex(getRandomTrackIndex());\r\n\t\telse if (currentTrackIndex === currentTrackList.length - 1)\r\n\t\t\tsetCurrentTrackIndex(0);\r\n\t\telse setCurrentTrackIndex(currentTrackIndex + 1);\r\n\t};\r\n\r\n\tconst getRandomTrackIndex = () => {\r\n\t\t// prevent infinite loop when currentTrackList has 1 song or less\r\n\t\tif (currentTrackList.length <= 1) return currentTrackIndex;\r\n\r\n\t\tlet randomTrackIndex;\r\n\r\n\t\tdo {\r\n\t\t\trandomTrackIndex = Math.floor(Math.random() * currentTrackList.length);\r\n\t\t} while (randomTrackIndex === currentTrackIndex);\r\n\r\n\t\treturn randomTrackIndex;\r\n\t};\r\n\r\n\t// reset audio source when currentTrackIndex or currentTrackList change\r\n\tuseEffect(() => {\r\n\t\t// fixes chrome cache bug\r\n\t\taudioRef.current.src = `${audioSrc}?x=${Math.random()}`;\r\n\t\trefreshAudio();\r\n\r\n\t\t// stfu linter:\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [currentTrackIndex, currentTrackList]);\r\n\r\n\t// scrubbing functionality\r\n\tconst onSeek = (value) => {\r\n\t\tstopUpdatingSeek();\r\n\r\n\t\taudioRef.current.currentTime = value;\r\n\t\tsetTrackProgress(value);\r\n\t};\r\n\r\n\tconst onSeekEnd = () => {\r\n\t\t// If not already playing, start\r\n\t\tif (!isPlaying) setIsPlaying(true);\r\n\r\n\t\tstartUpdatingSeek();\r\n\t};\r\n\r\n\tconst toggleMute = () => (volume === 0 ? setVolume(0.75) : setVolume(0));\r\n\tuseEffect(() => (audioRef.current.volume = volume), [volume]);\r\n\r\n\tconst parseTime = (timeInSec) => {\r\n\t\tif (!timeInSec) return NaN;\r\n\r\n\t\tconst mins = Math.floor(timeInSec / 60).toString();\r\n\t\tconst seconds = Math.floor(timeInSec % 60)\r\n\t\t\t.toString()\r\n\t\t\t.padStart(2, '0');\r\n\r\n\t\treturn `${mins}:${seconds}`;\r\n\t};\r\n\r\n\t// get % of track progress\r\n\tconst { duration } = audioRef.current;\r\n\tconst trackPerc = duration ? (trackProgress / duration) * 100 : 0,\r\n\t\tvolumePerc = volume * 100;\r\n\r\n\tlet volumeIcon;\r\n\tif (volume > 0.75) volumeIcon = <IoVolumeHigh />;\r\n\telse if (volume > 0.35) volumeIcon = <IoVolumeMedium />;\r\n\telse if (volume > 0) volumeIcon = <IoVolumeLow />;\r\n\telse volumeIcon = <IoVolumeOff />;\r\n\r\n\t// range input styling because css sux\r\n\tconst seekStyle = `\r\n  \t\t-webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${trackPerc}%, #ef3355), color-stop(${trackPerc}%, rgba(218, 218, 218, 0.2)))\r\n\t\t`;\r\n\r\n\tconst volumeBarStyle = `\r\n  \t\t-webkit-gradient(linear, 0% 0%, 100% 0%, color-stop(${volumePerc}%, #ef3355), color-stop(${volumePerc}%, rgba(218, 218, 218, 0.2)))\r\n\t\t`;\r\n\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<div className='songsmall'>\r\n\t\t\t\t<div className='songsmall__img-cntr'>\r\n\t\t\t\t\t<img src={imageSrc} alt='song art' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='songsmall__info'>\r\n\t\t\t\t\t<span className='songsmall__name'>{title}</span>\r\n\t\t\t\t\t<span className='songsmall__artist'>{artist}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='player'>\r\n\t\t\t\t<div className='player__btns'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`player__btn --tertiary \r\n\t\t\t\t\t\t${doRepeat ? '--active' : ''}`}\r\n\t\t\t\t\t\tonClick={() => setDoRepeat(!doRepeat)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IoRepeatOutline />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='player__btn --secondary' onClick={toPrevTrack}>\r\n\t\t\t\t\t\t<BiSkipPrevious />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`player__btn --primary ${isPlaying ? '--active' : ''}`}\r\n\t\t\t\t\t\tonClick={() => setIsPlaying(!isPlaying)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isPlaying ? <AiFillPauseCircle /> : <AiFillPlayCircle />}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className='player__btn --secondary' onClick={toNextTrack}>\r\n\t\t\t\t\t\t<BiSkipNext />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`player__btn --tertiary \r\n\t\t\t\t\t\t${doShuffle ? '--active' : ''}`}\r\n\t\t\t\t\t\tonClick={() => setDoShuffle(!doShuffle)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IoShuffleOutline />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='player__bar'>\r\n\t\t\t\t\t<span className='player__duration'>\r\n\t\t\t\t\t\t{parseTime(trackProgress) || '0:00'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='range'\r\n\t\t\t\t\t\tvalue={trackProgress}\r\n\t\t\t\t\t\tstep='0.5'\r\n\t\t\t\t\t\tmin='0'\r\n\t\t\t\t\t\tmax={duration ? duration : ``}\r\n\t\t\t\t\t\tstyle={{ background: seekStyle }}\r\n\t\t\t\t\t\tclassName='bar'\r\n\t\t\t\t\t\tonChange={(e) => onSeek(e.target.value)}\r\n\t\t\t\t\t\tonMouseUp={onSeekEnd}\r\n\t\t\t\t\t\tonKeyUp={onSeekEnd}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className='player__duration'>\r\n\t\t\t\t\t\t{parseTime(duration) || '0:00'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='volume'>\r\n\t\t\t\t<button className='volume__btn' onClick={toggleMute}>\r\n\t\t\t\t\t{volumeIcon}\r\n\t\t\t\t</button>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='range'\r\n\t\t\t\t\tvalue={volume}\r\n\t\t\t\t\tstep='0.02'\r\n\t\t\t\t\tmin='0'\r\n\t\t\t\t\tmax='1'\r\n\t\t\t\t\tstyle={{ background: volumeBarStyle }}\r\n\t\t\t\t\tclassName='volume__bar bar'\r\n\t\t\t\t\tonChange={(e) => setVolume(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nFooter.propTypes = {\r\n\tcurrentTrackIndex: PropTypes.number,\r\n\tsetCurrentTrackIndex: PropTypes.func.isRequired,\r\n\tcurrentTrackList: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Footer;\r\n","import http from '../http-common';\r\n\r\nclass SongsDS {\r\n\tgetByKeyword(keyword) {\r\n\t\treturn http.get(`/api/ver1/songs?keyword=${keyword}`);\r\n\t}\r\n\r\n\tgetByIds(ids) {\r\n\t\treturn http.get(`/api/ver1/songs/ids/${ids.join(',')}`);\r\n\t}\r\n}\r\n\r\nexport default new SongsDS();\r\n","import http from '../http-common';\r\n\r\nclass PlayListsDS {\r\n\tgetAll() {\r\n\t\treturn http.get('/api/ver1/playlists/');\r\n\t}\r\n\r\n\tgetById(id) {\r\n\t\treturn http.get(`/api/ver1/playlists/id/${id}`);\r\n\t}\r\n\r\n\tcreate(title) {\r\n\t\tconst data = { title };\r\n\t\treturn http.post('/api/ver1/playlists/', data);\r\n\t}\r\n\r\n\tedit({ id, title, tracks }) {\r\n\t\tconst data = { title, tracks };\r\n\t\treturn http.put(`/api/ver1/playlists/id/${id}`, data);\r\n\t}\r\n\r\n\tdelete(id) {\r\n\t\treturn http.delete(`/api/ver1/playlists/id/${id}`);\r\n\t}\r\n}\r\n\r\nexport default new PlayListsDS();\r\n","import './Explore.css';\r\nimport songsDS from '../../utils/songsDS';\r\nimport playlistsDS from '../../utils/PlaylistsDS';\r\nimport { useState, useEffect } from 'react';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { IoPlay, IoClose } from 'react-icons/io5';\r\n\r\nconst Explore = ({ setCurrentTrackIndex, setCurrentTrackList }) => {\r\n\tconst [queriedTracks, setQueriedTracks] = useState(); // server response\r\n\tconst [query, setQuery] = useState('');\r\n\r\n\tconst [checkedSongs, setCheckedSongs] = useState({});\r\n\tconst [isAnySongChecked, setIsAnySongChecked] = useState(false);\r\n\r\n\tconst [playlists, setPlaylists] = useState();\r\n\tconst [showPlSelector, setShowPlSelector] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsongsDS\r\n\t\t\t.getByKeyword('')\r\n\t\t\t.then((res) => setQueriedTracks(res.data.songs))\r\n\t\t\t.catch((e) => console.error(e));\r\n\t}, []);\r\n\r\n\tconst onAddPlClick = async () => {\r\n\t\tsetShowPlSelector(true);\r\n\r\n\t\tawait playlistsDS\r\n\t\t\t.getAll()\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPlaylists(res.data.playlistList);\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e));\r\n\t};\r\n\r\n\tconst onSearch = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tawait songsDS\r\n\t\t\t.getByKeyword(query)\r\n\t\t\t.then((res) => setQueriedTracks(res.data.songs))\r\n\t\t\t.catch((e) => console.error(e));\r\n\t};\r\n\r\n\tconst onCheck = (e) => {\r\n\t\tconst newObj = checkedSongs;\r\n\t\tnewObj[e.target.name] = e.target.checked;\r\n\t\tsetCheckedSongs(newObj);\r\n\r\n\t\tsetIsAnySongChecked(Object.values(checkedSongs).some((value) => value === true));\r\n\t};\r\n\r\n\tconst onPlSelect = async (id) => {\r\n\t\tsetShowPlSelector(false);\r\n\r\n\t\tconst playlist = playlists.find((playlist) => playlist._id === id);\r\n\t\tlet trackIds = playlist.tracks || [],\r\n\t\t\tnewTrackIds = Object.keys(checkedSongs).filter((key) => checkedSongs[key]);\r\n\r\n\t\tnewTrackIds = newTrackIds.filter((newTrackId) => !trackIds.includes(newTrackId));\r\n\t\ttrackIds.push(...newTrackIds);\r\n\r\n\t\tawait playlistsDS\r\n\t\t\t.edit({ id: playlist._id, tracks: trackIds })\r\n\t\t\t.catch((e) => console.error(e));\r\n\t};\r\n\r\n\tconst onPlay = (index) => {\r\n\t\tsetCurrentTrackList(queriedTracks);\r\n\t\tsetCurrentTrackIndex(index);\r\n\t};\r\n\r\n\tlet searchResults;\r\n\tif (queriedTracks) {\r\n\t\t// If server actually responded with a tracks array\r\n\t\tif (queriedTracks.length > 0) {\r\n\t\t\t// If the tracks array has any results\r\n\t\t\tsearchResults = (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addtopl'>\r\n\t\t\t\t\t\t<span className='addtopl__prompt'>\r\n\t\t\t\t\t\t\tSelect Songs to Add to a Playlist\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\tclassName='btn --submit'\r\n\t\t\t\t\t\t\tdisabled={isAnySongChecked ? false : true}\r\n\t\t\t\t\t\t\tonClick={onAddPlClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IoMdAdd />\r\n\t\t\t\t\t\t\t<span>Add to Playlist</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='results'>\r\n\t\t\t\t\t\t{queriedTracks.map((track, index) => (\r\n\t\t\t\t\t\t\t<div className={`songfull`} key={track._id}>\r\n\t\t\t\t\t\t\t\t<div className='songfull__cntr songsmall'>\r\n\t\t\t\t\t\t\t\t\t<div className='songsmall__img-cntr'>\r\n\t\t\t\t\t\t\t\t\t\t<img src={track.imageSrc} alt='song art' />\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='songfull__btn --play'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => onPlay(index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<IoPlay />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='songsmall__info'>\r\n\t\t\t\t\t\t\t\t\t\t<span className='songsmall__name'>\r\n\t\t\t\t\t\t\t\t\t\t\t{track.title}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className='songsmall__artist'>\r\n\t\t\t\t\t\t\t\t\t\t\t{track.artist}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<span className='songfull__cntr songfull__album'>\r\n\t\t\t\t\t\t\t\t\t{track.album}\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName='songfull__cntr songfull__checkbox'\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tname={track._id}\r\n\t\t\t\t\t\t\t\t\tonChange={onCheck}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsearchResults = <h2 className='error'>No Results Found</h2>;\r\n\t\t}\r\n\t} else {\r\n\t\t// If the server failed to return an array of 0 or more results\r\n\t\tsearchResults = '';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`selectpl popup ${showPlSelector ? '--shown' : ''}`}>\r\n\t\t\t\t<h2>Select a Playlist</h2>\r\n\r\n\t\t\t\t{playlists && playlists.length > 0 ? (\r\n\t\t\t\t\t<div className='selectpl__cntr'>\r\n\t\t\t\t\t\t{playlists.map((playlist) => (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName='selectpl__pl'\r\n\t\t\t\t\t\t\t\tkey={playlist._id}\r\n\t\t\t\t\t\t\t\tonClick={() => onPlSelect(playlist._id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className='selectpl__img-cntr'>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={playlist.imageSrc || '/assets/no-pl-img.png'}\r\n\t\t\t\t\t\t\t\t\t\talt='playlist art'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<span className='selectpl__title'>{playlist.title}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span className='error'>No Playlists Created</span>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tclassName='btn --cancel'\r\n\t\t\t\t\tonClick={() => setShowPlSelector(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IoClose />\r\n\t\t\t\t\t<span>Cancel</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<main\r\n\t\t\t\tclassName={`explore__main popup__behind \r\n\t\t\t\t${showPlSelector ? '--defocus' : ''}`}\r\n\t\t\t>\r\n\t\t\t\t<h4>Explore</h4>\r\n\r\n\t\t\t\t<form onSubmit={onSearch} className='search'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t\t<AiOutlineSearch />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t{searchResults}\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Explore;\r\n","import './Playlists.css';\r\nimport { useState, useEffect } from 'react';\r\nimport playlistsDS from '../../utils/PlaylistsDS';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdModeEdit } from 'react-icons/md';\r\nimport { IoMdAdd, IoMdCheckmark } from 'react-icons/io';\r\nimport { CgTrashEmpty } from 'react-icons/cg';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst Playlists = () => {\r\n\tconst [playlists, setPlaylists] = useState([]);\r\n\r\n\tconst refreshPlaylists = async () =>\r\n\t\tawait playlistsDS\r\n\t\t\t.getAll()\r\n\t\t\t.then((res) => setPlaylists(res.data.playlistList))\r\n\t\t\t.catch((e) => console.error(e));\r\n\r\n\t// stfu linter:\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(() => refreshPlaylists(), []);\r\n\r\n\tconst [showPlForm, setShowPlForm] = useState(false);\r\n\tconst [formPlName, setFormPlName] = useState('');\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [editingPlaylistId, setEditingPlaylistId] = useState();\r\n\r\n\tconst showPopup = (plId) => {\r\n\t\tif (plId) {\r\n\t\t\tsetFormPlName(playlists.find((playlist) => playlist._id === plId).title);\r\n\t\t\tsetIsEditing(true);\r\n\t\t\tsetEditingPlaylistId(plId);\r\n\t\t} else {\r\n\t\t\tsetFormPlName('');\r\n\t\t\tsetIsEditing(false);\r\n\t\t\tsetEditingPlaylistId(undefined);\r\n\t\t}\r\n\r\n\t\tsetShowPlForm(true);\r\n\t};\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (isEditing)\r\n\t\t\tawait playlistsDS\r\n\t\t\t\t.edit({ id: editingPlaylistId, title: formPlName })\r\n\t\t\t\t.catch((e) => console.error(e));\r\n\t\telse await playlistsDS.create(formPlName).catch((e) => console.error(e));\r\n\r\n\t\trefreshPlaylists();\r\n\t\tsetShowPlForm(false);\r\n\t};\r\n\r\n\tconst onDelete = async () => {\r\n\t\tawait playlistsDS.delete(editingPlaylistId).catch((e) => console.error(e));\r\n\r\n\t\trefreshPlaylists();\r\n\t\tsetShowPlForm(false);\r\n\t};\r\n\r\n\tconst onCancel = () => {\r\n\t\tsetFormPlName('');\r\n\t\tsetIsEditing(false);\r\n\t\tsetEditingPlaylistId(undefined);\r\n\t\tsetShowPlForm(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tclassName={`plform popup ${showPlForm ? '--shown' : ''}`}\r\n\t\t\t>\r\n\t\t\t\t<h2>{isEditing ? 'Edit' : 'Create a'} Playlist</h2>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='name'\r\n\t\t\t\t\tid='name'\r\n\t\t\t\t\tmaxLength='24'\r\n\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={formPlName}\r\n\t\t\t\t\tonChange={(e) => setFormPlName(e.target.value)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className='plform__btns'>\r\n\t\t\t\t\t<button type='button' className='btn --cancel' onClick={onCancel}>\r\n\t\t\t\t\t\t<IoClose />\r\n\t\t\t\t\t\t<span>Cancel</span>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{isEditing && (\r\n\t\t\t\t\t\t<button type='button' className='btn --delete' onClick={onDelete}>\r\n\t\t\t\t\t\t\t<CgTrashEmpty />\r\n\t\t\t\t\t\t\t<span>Delete</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button type='submit' className='btn --submit'>\r\n\t\t\t\t\t\t{isEditing ? <IoMdCheckmark /> : <IoMdAdd />}\r\n\t\t\t\t\t\t<span>{isEditing ? 'Edit' : 'Create'}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<main\r\n\t\t\t\tclassName={`playlists__main popup__behind \r\n\t\t\t\t${showPlForm ? '--defocus' : ''}`}\r\n\t\t\t>\r\n\t\t\t\t<h4>Playlists</h4>\r\n\r\n\t\t\t\t<div className='playlists__list'>\r\n\t\t\t\t\t<button className='plcard addplcard' onClick={() => showPopup()}>\r\n\t\t\t\t\t\t<IoMdAdd />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{playlists.map((playlist) => (\r\n\t\t\t\t\t\t<article className='plcard' key={playlist._id}>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={`/playlist/${playlist._id}`}\r\n\t\t\t\t\t\t\t\tclassName='plcard__img-cntr'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={playlist.imageSrc || 'assets/no-pl-img.png'}\r\n\t\t\t\t\t\t\t\t\talt='playlist art'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<div className='plcard__info'>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tto={`/playlist/${playlist._id}`}\r\n\t\t\t\t\t\t\t\t\tclassName='plcard__title-cntr'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<h2>{playlist.title}</h2>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t<div className='plcard__extra'>\r\n\t\t\t\t\t\t\t\t\t<span className='plcard__song-count'>\r\n\t\t\t\t\t\t\t\t\t\t{playlist.tracks ? playlist.tracks.length : 0}\r\n\t\t\t\t\t\t\t\t\t\t{' Songs'}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName='plcard__btn'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => showPopup(playlist._id)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<MdModeEdit />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Playlists;\r\n","import './PlaylistPage.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport playlistsDS from '../../utils/PlaylistsDS';\r\nimport songsDS from '../../utils/songsDS';\r\nimport { AiFillPlayCircle } from 'react-icons/ai';\r\nimport { CgTrashEmpty } from 'react-icons/cg';\r\nimport { IoShuffleOutline, IoPlay } from 'react-icons/io5';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PlaylistPage = ({ setCurrentTrackIndex, setCurrentTrackList, setDoShuffle }) => {\r\n\tconst { id: plId } = useParams();\r\n\tconst [playlist, setPlaylist] = useState({});\r\n\tconst [tracks, setTracks] = useState([]);\r\n\r\n\tconst refreshPlaylist = async () => {\r\n\t\tconst trackIds = await playlistsDS\r\n\t\t\t.getById(plId)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPlaylist(res.data);\r\n\t\t\t\treturn res.data.tracks;\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e));\r\n\r\n\t\tif (trackIds && trackIds.length > 0)\r\n\t\t\tsongsDS\r\n\t\t\t\t.getByIds(trackIds)\r\n\t\t\t\t.then((res) => setTracks(res.data.songs))\r\n\t\t\t\t.catch((e) => console.error(e));\r\n\t\telse setTracks([]);\r\n\t};\r\n\r\n\t// stfu linter:\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(() => refreshPlaylist(), []);\r\n\r\n\tconst onPlay = (index) => {\r\n\t\tsetCurrentTrackList(tracks);\r\n\t\tsetCurrentTrackIndex(index);\r\n\t};\r\n\r\n\tconst onShuffle = () => {\r\n\t\tsetDoShuffle(true);\r\n\t\tonPlay(Math.floor(Math.random() * tracks.length));\r\n\t};\r\n\r\n\tconst onDelete = async (id) => {\r\n\t\tconst updatedTrackIds = playlist.tracks.filter((trackId) => trackId !== id);\r\n\t\tawait playlistsDS\r\n\t\t\t.edit({ id: playlist._id, tracks: updatedTrackIds })\r\n\t\t\t.catch((e) => console.error(e));\r\n\t\trefreshPlaylist();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='plpage__main'>\r\n\t\t\t<div className=' plinfo'>\r\n\t\t\t\t<h4>Playlist</h4>\r\n\r\n\t\t\t\t<div className='plinfo__img-cntr'>\r\n\t\t\t\t\t<img src={playlist.imageSrc || '/assets/no-pl-img.png'} alt='' />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h1 className='plinfo__title'>{playlist.title}</h1>\r\n\r\n\t\t\t\t<div className='plinfo__extra'>\r\n\t\t\t\t\t<span className='plinfo__song-count'>{tracks.length} Songs</span>\r\n\r\n\t\t\t\t\t<div className='plinfo__btns'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='plinfo__btn --shuffle'\r\n\t\t\t\t\t\t\tdisabled={!tracks.length}\r\n\t\t\t\t\t\t\tonClick={onShuffle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IoShuffleOutline />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='plinfo__btn --play'\r\n\t\t\t\t\t\t\tdisabled={!tracks.length}\r\n\t\t\t\t\t\t\tonClick={() => onPlay(0)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AiFillPlayCircle />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='songlist'>\r\n\t\t\t\t{tracks.map((track, index) => (\r\n\t\t\t\t\t<div className={`songfull`} key={track._id}>\r\n\t\t\t\t\t\t<div className='songfull__cntr songsmall'>\r\n\t\t\t\t\t\t\t<div className='songsmall__img-cntr'>\r\n\t\t\t\t\t\t\t\t<img src={track.imageSrc} alt='song art' />\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName='songfull__btn --play'\r\n\t\t\t\t\t\t\t\t\tonClick={() => onPlay(index)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<IoPlay />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='songsmall__info'>\r\n\t\t\t\t\t\t\t\t<span className='songsmall__name'>{track.title}</span>\r\n\t\t\t\t\t\t\t\t<span className='songsmall__artist'>{track.artist}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span className='songfull__cntr songfull__album'>\r\n\t\t\t\t\t\t\t{track.album}\r\n\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t<div className='songfull__cntr --fixed-width'>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='songfull__btn --delete'\r\n\t\t\t\t\t\t\t\tonClick={() => onDelete(track._id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CgTrashEmpty />\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<span className='songfull__duration'>\r\n\t\t\t\t\t\t\t\t{track.duration.min}:\r\n\t\t\t\t\t\t\t\t{track.duration.sec.toString().padStart(2, '0')}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t<span className='songlist__addmore'>Add Songs from the Explore tab!</span>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default PlaylistPage;\r\n","import './App.css';\r\nimport http from './http-common';\r\nimport { useEffect, useState } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport ConditionalRoute from './components/ConditionalRoute';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Explore from './components/Explore/Explore';\r\nimport Playlists from './components/Playlists/Playlists';\r\nimport PlayListPage from './components/PlaylistPage/PlaylistPage';\r\n\r\nfunction App() {\r\n\tconst [gToken, setGToken] = useState();\r\n\tconst [currentTrackIndex, setCurrentTrackIndex] = useState();\r\n\tconst [currentTrackList, setCurrentTrackList] = useState([]);\r\n\tconst [doShuffle, setDoShuffle] = useState(false); // shuffle state\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gToken)\r\n\t\t\thttp.defaults.headers.common['authorization'] = `Bearer ${gToken.tokenId}`;\r\n\r\n\t\t// reset auth header, currentTrackIndex and currentTrackList on when footer unmounts\r\n\t\treturn () => {\r\n\t\t\tdelete http.defaults.headers.common['authorization'];\r\n\t\t\tsetCurrentTrackIndex(undefined);\r\n\t\t\tsetCurrentTrackList([]);\r\n\t\t\tsetDoShuffle(false);\r\n\t\t};\r\n\t}, [gToken]);\r\n\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<ConditionalRoute condition={!gToken} exact path='/login' redirectPath='/'>\r\n\t\t\t\t<LoginPage setGToken={setGToken} />\r\n\t\t\t</ConditionalRoute>\r\n\r\n\t\t\t<ConditionalRoute condition={!!gToken} path='/' redirectPath='/login'>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tsetGToken={setGToken}\r\n\t\t\t\t\tDPSrc={gToken ? gToken.profileObj.imageUrl : ''}\r\n\t\t\t\t/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{/* redirect '/' to '/playlists' */}\r\n\t\t\t\t\t<ConditionalRoute\r\n\t\t\t\t\t\tcondition={false}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/'\r\n\t\t\t\t\t\tredirectPath='/playlists'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ConditionalRoute\r\n\t\t\t\t\t\tcondition={!!gToken}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/explore'\r\n\t\t\t\t\t\tredirectPath='/login'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Explore\r\n\t\t\t\t\t\t\tsetCurrentTrackList={setCurrentTrackList}\r\n\t\t\t\t\t\t\tsetCurrentTrackIndex={setCurrentTrackIndex}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ConditionalRoute>\r\n\t\t\t\t\t<ConditionalRoute\r\n\t\t\t\t\t\tcondition={!!gToken}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/playlists'\r\n\t\t\t\t\t\tredirectPath='/login'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Playlists />\r\n\t\t\t\t\t</ConditionalRoute>\r\n\t\t\t\t\t<ConditionalRoute\r\n\t\t\t\t\t\tcondition={!!gToken}\r\n\t\t\t\t\t\tpath='/playlist/:id'\r\n\t\t\t\t\t\tredirectPath='/login'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PlayListPage\r\n\t\t\t\t\t\t\tsetCurrentTrackList={setCurrentTrackList}\r\n\t\t\t\t\t\t\tsetCurrentTrackIndex={setCurrentTrackIndex}\r\n\t\t\t\t\t\t\tsetDoShuffle={setDoShuffle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ConditionalRoute>\r\n\t\t\t\t</Switch>\r\n\t\t\t\t{/* Only show Footer if a track list is playing */}\r\n\t\t\t\t{currentTrackList.length > 0 && (\r\n\t\t\t\t\t<Footer\r\n\t\t\t\t\t\tcurrentTrackIndex={currentTrackIndex}\r\n\t\t\t\t\t\tsetCurrentTrackIndex={setCurrentTrackIndex}\r\n\t\t\t\t\t\tdoShuffle={doShuffle}\r\n\t\t\t\t\t\tsetDoShuffle={setDoShuffle}\r\n\t\t\t\t\t\tcurrentTrackList={currentTrackList}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</ConditionalRoute>\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}